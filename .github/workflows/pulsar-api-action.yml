name: Pulsar API CICD

on:    
  pull_request:
    branches:
      - master
  page_build:
  release:
    types:
      - created
jobs:
  TEST:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        echo ${{ secrets.DEVELOP_SERVER }}
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
    - name: Docker Login
      run: |
        docker login -u $GITHUB_ACTOR -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com
    - name: Build and Release the Docker image
      run: |
        docker build --tag docker.pkg.github.com/juny116/action_cicd/test:latest .
        echo "build done"
        docker images
    - name: Release Docker image
      run: |
        docker images
        docker push docker.pkg.github.com/juny116/action_cicd/test:latest
    - name: Deploy
      run: |
        apk update && apk add -f openssh-client
        eval $(ssh-agent -s)
        echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        ssh-keyscan ${{ secrets.DEVELOP_SERVER }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        echo "deploying to develop server..."
        ssh ${{ secrets.DEVELOP_USER }}@${{ secrets.DEVELOP_SERVER }} "docker login -u $GITHUB_ACTOR -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com &&
          docker pull docker.pkg.github.com/juny116/action_cicd/test:latest && docker run test Jun > test.txt"